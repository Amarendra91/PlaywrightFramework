name: playwright_web_test_chrome
run-name: E2E Web Tests

on:
  push:
    branches: [main, master]

  workflow_dispatch:
    inputs:
      test_env:
        description: 'Select test environment (demo or dev)'
        required: true
        default: demo
        type: choice
        options:
          - demo
          - dev
      test_tag:
        description: 'Select test tag (Smoke or Regression)'
        required: true
        default: Smoke
        type: choice
        options:
          - Smoke
          - Regression

jobs:
  test:
    runs-on: ubuntu-latest
    environment: ${{ github.event.inputs.test_env || 'demo' }}

    env:
      BASE_URL: ${{ vars.BASE_URL }}
      USER_NAME: ${{ secrets.USER_NAME }}
      PASSWORD: ${{ secrets.PASSWORD }}
      SECRET_KEY: ${{ secrets.SECRET_KEY }}
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: lts/*
      - name: Install dependencies
        run: npm ci
      - name: Install Playwright Browsers
        run: npx playwright install --with-deps
      - name: Determine Test Tagging
        id: tag
        run: |
          # Use tag from workflow_dispatch or default to 'Smoke'
          if [ -n "${{ github.event.inputs.test_tag }}" ]; then
            echo "tag=${{ github.event.inputs.test_tag }}" >> $GITHUB_OUTPUT
          else
            echo "tag=Smoke" >> $GITHUB_OUTPUT
          fi
      - name: Run Playwright tests
        run: |
          echo "Running tests with tag: ${{ steps.tag.outputs.tag }}"
          SECRET_KEY=${{ secrets.SECRET_KEY }} npx playwright test --project=ui_test_chrome --grep "@${{ steps.tag.outputs.tag }}"
      - name: Upload Report
        uses: actions/upload-artifact@v4
        if: ${{ !cancelled() }}
        with:
          name: playwright-report
          path: playwright-report/
          retention-days: 30
      - name: Publish Test Report
        uses: ctrf-io/github-test-reporter@v1
        with:
          report-path: './ctrf/*.json'
          failed-report: true
          flaky-report: true
          test-report: true
          # Order reports with the most important information first
          report-order: 'test-report,failed-report,flaky-report'
        if: always()
      - name: Read Test Results and Notify Slack
        if: always()
        run: |
          echo "Reading report..."
          FILE=$(find ./ctrf -name "*.json" | head -n 1)
          RESULTS=$(cat "$FILE")
          TOTAL=$(jq '.results.summary.tests' "$FILE")
          PASSED=$(jq '.results.summary.passed' "$FILE")
          FAILED=$(jq '.results.summary.failed' "$FILE")
          SKIPPED=$(jq '.results.summary.skipped' "$FILE")
          FLAKY=$(jq '[.results.tests[] | select(.flaky == true)] | length' "$FILE")

          # Pad numbers with spaces (right-aligned)
          PADDED_PASSED=$(printf "%3s" "$PASSED")
          PADDED_FAILED=$(printf "%3s" "$FAILED")
          PADDED_SKIPPED=$(printf "%2s" "$SKIPPED")
          PADDED_FLAKY=$(printf "%3s" "$FLAKY")
          PADDED_TOTAL=$(printf "%3s" "$TOTAL")

          STATUS="‚úÖ PASSED"
          if [[ $FAILED -gt 0 ]]; then
            STATUS="‚ùå FAILED"
          elif [[ $FLAKY -gt 0 ]]; then
            STATUS ="ü§∑ FLAKY test(s) identified." 
          fi

          REPORT_URL="https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}"

          MENTION=""
          if [ "$FAILED" -gt 0 ] || [ "$FLAKY" -gt 0 ]; then
            MENTION="<@${{secrets.SLACK_USER}}>, kindly check the failed or flaky tests."
          fi

          SLACK_MESSAGE=$(cat <<EOF
          *UI Test Result Summary (Chrome)_Test Run # ${{ github.run_number }}*
          *Status: $STATUS*
          \`\`\`
          |-----------|---------|
          | Test Type |  Count  |
          |-----------|---------|
          | ‚úÖ Passed | $PADDED_PASSED 
          |-----------|---------|
          | ‚ùå Failed | $PADDED_FAILED 
          |-----------|---------|
          | ‚ö†Ô∏è Skipped | $PADDED_SKIPPED 
          |-----------|---------|
          | ü§∑ Flaky  | $PADDED_FLAKY 
          |-----------|---------|
          | üìä Total  | $PADDED_TOTAL 
          |-----------|---------|
          \`\`\`

          üîó *Report:* <$GITHUB_SERVER_URL/$GITHUB_REPOSITORY/actions/runs/$GITHUB_RUN_ID|View Workflow>

          $MENTION
          EOF
          )

          curl -X POST -H 'Content-type: application/json' \
            --data "{\"text\": \"$SLACK_MESSAGE\"}" \
            ${{ secrets.SLACK_WEBHOOK_URL }}
